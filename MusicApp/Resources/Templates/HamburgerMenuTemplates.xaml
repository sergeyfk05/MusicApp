<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MusicApp.Resources.Templates"
    xmlns:controls="using:MusicApp.Resources.Templates"
    xmlns:core="clr-namespace:System;assembly=mscorlib"
    xmlns:presentation="http://schemas.microsoft.com/netfx/2009/xaml/presentation">

    <presentation:KeyTime x:Key="HamburgerMenuAnimationStartTime">0</presentation:KeyTime>
    <presentation:KeyTime x:Key="HamburgerMenuAnimationEndTime">0:0:0.5</presentation:KeyTime>
    <core:Double x:Key="HamburgerMenuClosedMenuWidth">72</core:Double>
    <core:Double x:Key="HamburgerMenuOpenedMenuWidth">200</core:Double>

    <Storyboard x:Key="HamburgerMenuRectangles_OpenMenu">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="HamburgerMenu_rectangle">
            <EasingDoubleKeyFrame KeyTime="{StaticResource HamburgerMenuAnimationStartTime}" Value="0"/>
            <EasingDoubleKeyFrame KeyTime="{StaticResource HamburgerMenuAnimationEndTime}" Value="43.5"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="HamburgerMenu_rectangle1">
            <EasingDoubleKeyFrame KeyTime="{StaticResource HamburgerMenuAnimationStartTime}" Value="0"/>
            <EasingDoubleKeyFrame KeyTime="{StaticResource HamburgerMenuAnimationEndTime}" Value="-43.5"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HamburgerMenu_rectangle2">
            <EasingDoubleKeyFrame KeyTime="{StaticResource HamburgerMenuAnimationStartTime}" Value="1"/>
            <EasingDoubleKeyFrame KeyTime="{StaticResource HamburgerMenuAnimationEndTime}" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="HamburgerMenuRectangles_CloseMenu">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="HamburgerMenu_rectangle">
            <EasingDoubleKeyFrame KeyTime="{StaticResource HamburgerMenuAnimationStartTime}" Value="43.5"/>
            <EasingDoubleKeyFrame KeyTime="{StaticResource HamburgerMenuAnimationEndTime}" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="HamburgerMenu_rectangle1">
            <EasingDoubleKeyFrame KeyTime="{StaticResource HamburgerMenuAnimationStartTime}" Value="-43.5"/>
            <EasingDoubleKeyFrame KeyTime="{StaticResource HamburgerMenuAnimationEndTime}" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HamburgerMenu_rectangle2">
            <EasingDoubleKeyFrame KeyTime="{StaticResource HamburgerMenuAnimationStartTime}" Value="0"/>
            <EasingDoubleKeyFrame KeyTime="{StaticResource HamburgerMenuAnimationEndTime}" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="HamburgerMenu_OpenMenu">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="Menu">
            <EasingDoubleKeyFrame KeyTime="{StaticResource HamburgerMenuAnimationStartTime}" Value="{StaticResource HamburgerMenuClosedMenuWidth}"/>
            <EasingDoubleKeyFrame KeyTime="{StaticResource HamburgerMenuAnimationEndTime}" Value="{StaticResource HamburgerMenuOpenedMenuWidth}"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="HamburgerMenu_CloseMenu">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="Menu">
            <EasingDoubleKeyFrame KeyTime="{StaticResource HamburgerMenuAnimationStartTime}" Value="{StaticResource HamburgerMenuOpenedMenuWidth}"/>
            <EasingDoubleKeyFrame KeyTime="{StaticResource HamburgerMenuAnimationEndTime}" Value="{StaticResource HamburgerMenuClosedMenuWidth}"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>


    <ControlTemplate TargetType="Button" x:Key="HamburgerMenu_ButtonTemplate">
        <Grid Background="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center">
            <Rectangle x:Name="HamburgerMenu_rectangle" Style="{DynamicResource HamburgerMenu_ButtonRectangleStyle}" Margin="0 0 0 0" RenderTransformOrigin="-0,0.5">
                <Rectangle.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle x:Name="HamburgerMenu_rectangle1" Style="{DynamicResource HamburgerMenu_ButtonRectangleStyle}" Margin="0 20 0 0 " RenderTransformOrigin="-0,0.5">
                <Rectangle.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle x:Name="HamburgerMenu_rectangle2" Style="{DynamicResource HamburgerMenu_ButtonRectangleStyle}" Margin="0 10 0 0" VerticalAlignment="Top"/>
        </Grid>

        <ControlTemplate.Triggers>

            <DataTrigger Binding="{Binding Menu_IsOpen, Mode=OneWay}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="OpenMenuRectangleStoryboard" Storyboard="{StaticResource HamburgerMenuRectangles_OpenMenu}"/>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="OpenMenuRectangleStoryboard"/>
                </DataTrigger.ExitActions>
            </DataTrigger>

            <DataTrigger Binding="{Binding Menu_IsOpen, Mode=OneWay}" Value="False">
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="CloseMenuRectangleStoryboard" Storyboard="{StaticResource HamburgerMenuRectangles_CloseMenu}"/>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="CloseMenuRectangleStoryboard"/>
                </DataTrigger.ExitActions>
            </DataTrigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="HamburgerMenu_ListBoxItemTemplate" TargetType="{x:Type ListBoxItem}">
        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
            <StackPanel Orientation="Horizontal">
                <Grid Width="72" HorizontalAlignment="Left" VerticalAlignment="Center">
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="36" FontFamily="Segoe MDL2 Assets" Text="{Binding IconText}" />
                </Grid>
                <TextBlock FontSize="24" VerticalAlignment="Center" Text="{Binding LabelText}" />
            </StackPanel>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource HamburgerMenu_ListBoxItem_MouseOver_Background}"/>
                <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource HamburgerMenu_ListBoxItem_MouseOver_BorderBrush}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource HamburgerMenu_ListBoxItem_SelectionPassive_Selected_Background}"/>
                <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource HamburgerMenu_ListBoxItem_SelectionPassive_Selected_BorderBrush}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource HamburgerMenu_ListBoxItem_SelectionActive_Selected_Background}"/>
                <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource HamburgerMenu_ListBoxItem_SelectionActive_Selected_BorderBrush}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource HamburgerMenu_ListBoxItem_Disabled_Foreground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="HamburgerMenu_ListBoxTemplate" TargetType="ListBox">
        <Border Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}">
            <ItemsPresenter/>
        </Border>
    </ControlTemplate>

    <ControlTemplate TargetType="ContentControl" x:Key="HamburgerMenuTemplate">
        <DockPanel x:Name="Menu" Style="{DynamicResource HamburgerMenu_DockPanelStyle}">
            <StackPanel>
                <Grid Style="{DynamicResource HamburgerMenu_TopPanelStyle}">
                    <Button x:Name="HamburgerMenu_Button" Style="{DynamicResource HamburgerMenu_ButtonStyle}" Command="{Binding ClickMenuButton}"/>
                </Grid>
                <ListBox Style="{DynamicResource HamburgerMenu_ListBoxStyle}" ItemsSource="{Binding MenuList, Mode=OneWay}"/>
            </StackPanel>
        </DockPanel>

        <ControlTemplate.Triggers>

            <DataTrigger  Binding="{Binding Menu_IsOpen, Mode=OneWay}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="OpenMenuStoryboard" Storyboard="{StaticResource HamburgerMenu_OpenMenu}"/>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="OpenMenuStoryboard"/>
                </DataTrigger.ExitActions>
            </DataTrigger>

            <DataTrigger Binding="{Binding Menu_IsOpen, Mode=OneWay}" Value="False">
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="CloseMenuStoryboard" Storyboard="{StaticResource HamburgerMenu_CloseMenu}"/>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="CloseMenuStoryboard"/>
                </DataTrigger.ExitActions>
            </DataTrigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>
